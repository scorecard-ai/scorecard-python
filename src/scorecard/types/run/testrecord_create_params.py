# File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

from __future__ import annotations

from typing import Dict, Union, Iterable, Optional
from typing_extensions import Required, TypeAlias, TypedDict

__all__ = [
    "TestrecordCreateParams",
    "CustomInputs",
    "CustomInputsFileURL",
    "CustomInputsJsonObjectInput",
    "CustomLabels",
    "CustomLabelsFileURL",
    "CustomLabelsJsonObjectInput",
    "CustomOutputs",
    "CustomOutputsFileURL",
    "CustomOutputsJsonObjectInput",
]


class TestrecordCreateParams(TypedDict, total=False):
    context: Optional[str]
    """The context that was used while generating the testrecord."""

    custom_inputs: Optional[Dict[str, CustomInputs]]

    custom_labels: Optional[Dict[str, CustomLabels]]

    custom_outputs: Optional[Dict[str, CustomOutputs]]

    error_message: Optional[str]
    """The error message for the testrecord."""

    ideal: Optional[str]
    """The ideal response."""

    model_debug_info: Optional[Dict[str, Union[float, str]]]
    """
    Debug information generated by Scorecard during the execution of the testrecord.
    """

    model_params: Optional[Dict[str, Union[float, str]]]
    """The model parameters used to generate the response."""

    prompt: Optional[str]
    """The prompt used to generate the response."""

    response: Optional[str]
    """The response generated by the model."""

    testcase_id: Optional[int]

    testset_id: Optional[int]

    user_query: Optional[str]
    """The user query that was executed for the testrecord."""


class CustomInputsFileURL(TypedDict, total=False):
    url: Required[str]

    name: Optional[str]


class CustomInputsJsonObjectInput(TypedDict, total=False):
    value: Required[Union[Dict[str, object], Iterable[object], str, float, bool, None]]
    """
    The value of the JSON object, which can be a dictionary, list, string, integer,
    float, boolean, or None.
    """


CustomInputs: TypeAlias = Union[str, CustomInputsFileURL, CustomInputsJsonObjectInput]


class CustomLabelsFileURL(TypedDict, total=False):
    url: Required[str]

    name: Optional[str]


class CustomLabelsJsonObjectInput(TypedDict, total=False):
    value: Required[Union[Dict[str, object], Iterable[object], str, float, bool, None]]
    """
    The value of the JSON object, which can be a dictionary, list, string, integer,
    float, boolean, or None.
    """


CustomLabels: TypeAlias = Union[str, CustomLabelsFileURL, CustomLabelsJsonObjectInput]


class CustomOutputsFileURL(TypedDict, total=False):
    url: Required[str]

    name: Optional[str]


class CustomOutputsJsonObjectInput(TypedDict, total=False):
    value: Required[Union[Dict[str, object], Iterable[object], str, float, bool, None]]
    """
    The value of the JSON object, which can be a dictionary, list, string, integer,
    float, boolean, or None.
    """


CustomOutputs: TypeAlias = Union[str, CustomOutputsFileURL, CustomOutputsJsonObjectInput]
